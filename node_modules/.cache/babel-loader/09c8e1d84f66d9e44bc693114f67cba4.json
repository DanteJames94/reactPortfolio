{"ast":null,"code":"import _slicedToArray from\"/Users/dantejames94/Desktop/Homework Turn In/reactPortfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";// https://react-bootstrap.github.io/components/cards/#card-columns\nimport{CardColumns,Card}from\"react-bootstrap\";import{filteredProjects,projectData}from\"../../data\";import{ProjectsError,ProjectsLoading}from\"../components/projectsLoadingError\";// Image\nimport defualtImage from\"../images/logo.svg\";var Projects=function Projects(_ref){var theme=_ref.theme,githubUsername=_ref.githubUsername;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isError=_useState4[0],setIsError=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var githubUrl=\"https://api.github.com/users/\".concat(githubUsername,\"/repos\");useEffect(function(){fetch(githubUrl).then(function(response){if(response.status>=200&&response.status<=299){return response.json();}else{setIsError(true);setIsLoading(false);setError(response.statusText);throw new Error(response.statusText);}}).then(function(data){var check=false;if(filteredProjects.length!==0){var tempObj={};data.forEach(function(element,index){tempObj[element.name]=index;});check=filteredProjects.every(function(element){return tempObj[element]!==undefined;});}if(check){var newData=data.filter(function(projects){return filteredProjects.includes(projects.name);});if(projectData.length===filteredProjects.length){for(var i=0;i<projectData.length;i++){newData[i].imageInfo=projectData[i];}}setData(newData);setIsLoading(false);}else{setData(data);setIsLoading(false);}}).catch(function(error){return console.log(error);});},[githubUrl]);var newTheme=\"\".concat(theme,\" d-flex flex-column min-vh-100 justify-content-center align-items-center text-center\");if(isLoading){return/*#__PURE__*/_jsx(ProjectsLoading,{theme:theme});}if(isError){return/*#__PURE__*/_jsx(ProjectsError,{theme:theme,error:error});}// There MUST be one image per repo (see projectData.js)\nif(data.length===projectData.length){return/*#__PURE__*/_jsx(\"section\",{id:\"projects\",className:newTheme,children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Projects\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(CardColumns,{children:data.map(function(projects){return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:projects.imageInfo.image,alt:\"Project Image\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(\"a\",{href:projects.html_url,target:\"_blank\",rel:\"noreferrer\",children:/*#__PURE__*/_jsx(Card.Title,{className:\"d-inline-block\",children:projects.name})})})]},projects.id);})})]})});}return/*#__PURE__*/_jsx(\"section\",{id:\"projects\",className:newTheme,children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Projects\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(CardColumns,{children:data.map(function(projects){return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:defualtImage}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(\"a\",{href:projects.html_url,target:\"_blank\",rel:\"noreferrer\",children:/*#__PURE__*/_jsx(Card.Title,{className:\"d-inline-block\",children:projects.name})})})]},projects.id);})})]})});};export default Projects;","map":{"version":3,"sources":["/Users/dantejames94/Desktop/Homework Turn In/reactPortfolio/src/assets/containers/Projects.js"],"names":["React","useState","useEffect","CardColumns","Card","filteredProjects","projectData","ProjectsError","ProjectsLoading","Projects","theme","githubUsername","isLoading","setIsLoading","isError","setIsError","error","setError","data","setData","githubUrl","fetch","then","response","status","json","statusText","Error","check","length","tempObj","forEach","element","index","name","every","undefined","newData","filter","projects","includes","i","imageInfo","catch","console","log","newTheme","map","image","html_url","id","defualtImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// https://react-bootstrap.github.io/components/cards/#card-columns\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport { filteredProjects, projectData } from \"../../data\";\nimport {\n  ProjectsError,\n  ProjectsLoading,\n} from \"../components/projectsLoadingError\";\n\n// Image\nimport defualtImage from \"../images/logo.svg\";\n\nconst Projects = ({ theme, githubUsername }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n\n  const githubUrl = `https://api.github.com/users/${githubUsername}/repos`;\n\n  useEffect(() => {\n    fetch(githubUrl)\n      .then((response) => {\n        if (response.status >= 200 && response.status <= 299) {\n          return response.json();\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n      })\n      .then((data) => {\n        let check = false;\n        if (filteredProjects.length !== 0) {\n          let tempObj = {};\n          data.forEach((element, index) => {\n            tempObj[element.name] = index;\n          });\n          check = filteredProjects.every((element) => {\n            return tempObj[element] !== undefined;\n          });\n        }\n        if (check) {\n          let newData = data.filter((projects) =>\n            filteredProjects.includes(projects.name)\n          );\n          if (projectData.length === filteredProjects.length) {\n            for (let i = 0; i < projectData.length; i++) {\n              newData[i].imageInfo = projectData[i];\n            }\n          }\n          setData(newData);\n          setIsLoading(false);\n        } else {\n          setData(data);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => console.log(error));\n  }, [githubUrl]);\n\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center align-items-center text-center`;\n\n  if (isLoading) {\n    return <ProjectsLoading theme={theme} />;\n  }\n\n  if (isError) {\n    return <ProjectsError theme={theme} error={error} />;\n  }\n\n  // There MUST be one image per repo (see projectData.js)\n  if (data.length === projectData.length) {\n    return (\n      <section id=\"projects\" className={newTheme}>\n        <div className=\"container\">\n          <h2>Projects</h2>\n          <hr />\n          <CardColumns>\n            {data.map((projects) => {\n              return (\n                <Card key={projects.id}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={projects.imageInfo.image}\n                    alt=\"Project Image\"\n                  />\n                  <Card.Body>\n                    <a\n                      href={projects.html_url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <Card.Title className=\"d-inline-block\">\n                        {projects.name}\n                      </Card.Title>\n                    </a>\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardColumns>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className={newTheme}>\n      <div className=\"container\">\n        <h2>Projects</h2>\n        <hr />\n        <CardColumns>\n          {data.map((projects) => {\n            return (\n              <Card key={projects.id}>\n                <Card.Img variant=\"top\" src={defualtImage} />\n                <Card.Body>\n                  <a href={projects.html_url} target=\"_blank\" rel=\"noreferrer\">\n                    <Card.Title className=\"d-inline-block\">\n                      {projects.name}\n                    </Card.Title>\n                  </a>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}