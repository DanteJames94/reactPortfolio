{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dantejames94/Desktop/Homework Turn In/github-react-portfolio-template/src/assets/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { githubUsername } from \"../../data\";\nimport { AppLoading, AppError } from \"../components/appLoadingError\";\nimport About from \"../components/About\";\nimport Skills from \"../components/Skills\";\nimport Projects from \"./Projects\";\nimport Contact from \"../components/Contact\";\nimport Footer from \"../components/Footer\";\n\nconst App = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null); // Change the defualt theme below (\"dark\" or \"light\")\n\n  const [theme, setTheme] = useState(\"dark\");\n  const apiUrl = `https://api.github.com/users/${githubUsername}`;\n  useEffect(() => {\n    fetch(apiUrl).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        setIsError(true);\n        setIsLoading(false);\n        setError(response.statusText);\n        throw new Error(response.statusText);\n      }\n    }).then(data => {\n      setData(data);\n      document.title = data.name; // Comment out setIsLoading below to test Loading screen with a valid username (may require reloading the page)\n\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, [apiUrl]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(AppLoading, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(AppError, {\n      theme: theme,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  const homeData = {\n    avatar: data.avatar_url,\n    githubUrl: data.html_url,\n    name: data.name,\n    link: data.blog,\n    bio: data.bio,\n    twitter: data.twitter_username\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(About, {\n      theme: theme,\n      setTheme: setTheme,\n      ...homeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Skills, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {\n        theme: theme,\n        githubUsername: githubUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contact, {\n        theme: theme,\n        avatar: homeData.avatar,\n        name: homeData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      githubUrl: homeData.githubUrl,\n      link: homeData.link,\n      twitter: homeData.twitter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"AC7gIjIz0Fpfz2QsKmu8nqGRCjo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dantejames94/Desktop/Homework Turn In/github-react-portfolio-template/src/assets/containers/App.js"],"names":["useState","useEffect","githubUsername","AppLoading","AppError","About","Skills","Projects","Contact","Footer","App","isLoading","setIsLoading","isError","setIsError","error","setError","data","setData","theme","setTheme","apiUrl","fetch","then","response","status","json","statusText","Error","document","title","name","catch","console","log","homeData","avatar","avatar_url","githubUrl","html_url","link","blog","bio","twitter","twitter_username"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { githubUsername } from \"../../data\";\nimport { AppLoading, AppError } from \"../components/appLoadingError\";\nimport About from \"../components/About\";\nimport Skills from \"../components/Skills\";\nimport Projects from \"./Projects\";\nimport Contact from \"../components/Contact\";\nimport Footer from \"../components/Footer\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  // Change the defualt theme below (\"dark\" or \"light\")\n  const [theme, setTheme] = useState(\"dark\");\n\n  const apiUrl = `https://api.github.com/users/${githubUsername}`;\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((response) => {\n        if (response.status >= 200 && response.status <= 299) {\n          return response.json();\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n      })\n      .then((data) => {\n        setData(data);\n        document.title = data.name;\n        // Comment out setIsLoading below to test Loading screen with a valid username (may require reloading the page)\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, [apiUrl]);\n\n  if (isLoading) {\n    return <AppLoading theme={theme} />;\n  }\n\n  if (isError) {\n    return <AppError theme={theme} error={error} />;\n  }\n\n  const homeData = {\n    avatar: data.avatar_url,\n    githubUrl: data.html_url,\n    name: data.name,\n    link: data.blog,\n    bio: data.bio,\n    twitter: data.twitter_username,\n  };\n\n  return (\n    <>\n      <About theme={theme} setTheme={setTheme} {...homeData} />\n      <main>\n        <Skills theme={theme} />\n        <Projects theme={theme} githubUsername={githubUsername} />\n        <Contact theme={theme} avatar={homeData.avatar} name={homeData.name} />\n      </main>\n      <Footer\n        githubUrl={homeData.githubUrl}\n        link={homeData.link}\n        twitter={homeData.twitter}\n      />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}