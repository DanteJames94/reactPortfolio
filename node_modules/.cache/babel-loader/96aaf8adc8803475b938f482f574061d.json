{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dantejames94/Desktop/Homework Turn In/github-react-portfolio-template/src/assets/containers/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // https://react-bootstrap.github.io/components/cards/#card-columns\n\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport { filteredProjects, projectData } from \"../../data\";\nimport { ProjectsError, ProjectsLoading } from \"../components/projectsLoadingError\"; // Image\n\nimport defualtImage from \"../images/logo.svg\";\n\nconst Projects = ({\n  theme,\n  githubUsername\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const githubUrl = `https://api.github.com/users/${githubUsername}/repos`;\n  useEffect(() => {\n    fetch(githubUrl).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        setIsError(true);\n        setIsLoading(false);\n        setError(response.statusText);\n        throw new Error(response.statusText);\n      }\n    }).then(data => {\n      let check = false;\n\n      if (filteredProjects.length !== 0) {\n        let tempObj = {};\n        data.forEach((element, index) => {\n          tempObj[element.name] = index;\n        });\n        check = filteredProjects.every(element => {\n          return tempObj[element] !== undefined;\n        });\n      }\n\n      if (check) {\n        let newData = data.filter(projects => filteredProjects.includes(projects.name));\n\n        if (projectData.length === filteredProjects.length) {\n          for (let i = 0; i < projectData.length; i++) {\n            newData[i].imageInfo = projectData[i];\n          }\n        }\n\n        setData(newData);\n        setIsLoading(false);\n      } else {\n        setData(data);\n        setIsLoading(false);\n      }\n    }).catch(error => console.log(error));\n  }, [githubUrl]);\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center align-items-center text-center`;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(ProjectsLoading, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ProjectsError, {\n      theme: theme,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  } // There MUST be one image per repo (see projectData.js)\n\n\n  if (data.length === projectData.length) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"projects\",\n      className: newTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n          children: data.map(projects => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: projects.imageInfo.image,\n                alt: \"Project Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: projects.html_url,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    className: \"d-inline-block\",\n                    children: projects.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, projects.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: newTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: data.map(projects => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: defualtImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: projects.html_url,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"d-inline-block\",\n                  children: projects.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, projects.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"wEvG6pczBzj7vNeX8QuMFZ5xwQ8=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/dantejames94/Desktop/Homework Turn In/github-react-portfolio-template/src/assets/containers/Projects.js"],"names":["React","useState","useEffect","CardColumns","Card","filteredProjects","projectData","ProjectsError","ProjectsLoading","Projects","theme","githubUsername","isLoading","setIsLoading","isError","setIsError","error","setError","data","setData","githubUrl","fetch","then","response","status","json","statusText","Error","check","length","tempObj","forEach","element","index","name","every","undefined","newData","filter","projects","includes","i","imageInfo","catch","console","log","newTheme","map","image","html_url","id","defualtImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// https://react-bootstrap.github.io/components/cards/#card-columns\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport { filteredProjects, projectData } from \"../../data\";\nimport {\n  ProjectsError,\n  ProjectsLoading,\n} from \"../components/projectsLoadingError\";\n\n// Image\nimport defualtImage from \"../images/logo.svg\";\n\nconst Projects = ({ theme, githubUsername }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n\n  const githubUrl = `https://api.github.com/users/${githubUsername}/repos`;\n\n  useEffect(() => {\n    fetch(githubUrl)\n      .then((response) => {\n        if (response.status >= 200 && response.status <= 299) {\n          return response.json();\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n      })\n      .then((data) => {\n        let check = false;\n        if (filteredProjects.length !== 0) {\n          let tempObj = {};\n          data.forEach((element, index) => {\n            tempObj[element.name] = index;\n          });\n          check = filteredProjects.every((element) => {\n            return tempObj[element] !== undefined;\n          });\n        }\n        if (check) {\n          let newData = data.filter((projects) =>\n            filteredProjects.includes(projects.name)\n          );\n          if (projectData.length === filteredProjects.length) {\n            for (let i = 0; i < projectData.length; i++) {\n              newData[i].imageInfo = projectData[i];\n            }\n          }\n          setData(newData);\n          setIsLoading(false);\n        } else {\n          setData(data);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => console.log(error));\n  }, [githubUrl]);\n\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center align-items-center text-center`;\n\n  if (isLoading) {\n    return <ProjectsLoading theme={theme} />;\n  }\n\n  if (isError) {\n    return <ProjectsError theme={theme} error={error} />;\n  }\n\n  // There MUST be one image per repo (see projectData.js)\n  if (data.length === projectData.length) {\n    return (\n      <section id=\"projects\" className={newTheme}>\n        <div className=\"container\">\n          <h2>Projects</h2>\n          <hr />\n          <CardColumns>\n            {data.map((projects) => {\n              return (\n                <Card key={projects.id}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={projects.imageInfo.image}\n                    alt=\"Project Image\"\n                  />\n                  <Card.Body>\n                    <a\n                      href={projects.html_url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <Card.Title className=\"d-inline-block\">\n                        {projects.name}\n                      </Card.Title>\n                    </a>\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardColumns>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className={newTheme}>\n      <div className=\"container\">\n        <h2>Projects</h2>\n        <hr />\n        <CardColumns>\n          {data.map((projects) => {\n            return (\n              <Card key={projects.id}>\n                <Card.Img variant=\"top\" src={defualtImage} />\n                <Card.Body>\n                  <a href={projects.html_url} target=\"_blank\" rel=\"noreferrer\">\n                    <Card.Title className=\"d-inline-block\">\n                      {projects.name}\n                    </Card.Title>\n                  </a>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}